AWSTemplateFormatVersion: 2010-09-09
Description: Template for Multi-Arch Container Pipelines (AARCH64, AMD64) based on CodePipeline

Parameters:
  BuildSource:
    Description: Type of repository
    Type: String
    Default: CodeCommit
    AllowedValues:
      - "CodeCommit"
      - "CodeStarSourceConnection"
  BuildStrategy:
    Description: Method to use
    Type: String
    Default: Containerfile
    AllowedValues:
    - "Containerfile"
    - "Source-to-Image"
  BuilderImage:
    Description: "Self-assembling builder image to use (See also: https://github.com/openshift/source-to-image)"
    Type: String
    Default: registry.fedoraproject.org/f34/s2i-base
  BuildStackName:
    Description: Name of the stack containing build projects, roles & pipeline bucket
    Type: String
    Default: aws-codebuild-podman
  CodeStarConnectionArn:
    Description: ARN of the connection (for GitHub or Bitbucket repositories)
    Type: String
  RepositoryStackName:
    Description: Name of the stack containing source and image repositories
    Type: String
    Default: aws-codebuild-podman-repositories
  PipelineFrequency:
    Description: Scheduled invocation of the pipeline
    Type: String
    Default: none
    AllowedValues:
      - "none"
      - "1 hour"
      - "4 hours"
      - "12 hours"
      - "1 day"
      - "7 days"
      - "14 days"
      - "28 days"
  PipelineSourceTrigger:
    Description: Should this pipeline trigger on source changes?
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  PipelineImageTrigger:
    Description: When using local image replacement, trigger on image change?
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  Branch:
    Description: "Branch or reference to use in the source repository. (See also: https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html)"
    Type: String
    Default: main
  TargetTag:
    Description: The base tag name for the manifest and architecture builds.
    Type: String
    Default: latest
  ContextRoot:
    Description: Where the container build root is located within the repository.
    Type: String
    Default: "."
  Containerfile:
    Description: The file to use for the container build (e.g. Containerfile or Dockerfile)
    Type: String
    Default: "Containerfile"
  ContainerFromRepo:
    Description: A local ECR replacement FROM for the container builds (if different from the Containerfile).
    Type: String
  ContainerFromTag:
    Description: A local ECR replacement FROM for the container builds (if different from the Containerfile).
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Related Stacks"
        Parameters:
          - BuildStackName
          - RepositoryStackName
      - Label:
          default: "Pipeline Trigger Information"
        Parameters:
          - PipelineFrequency
          - PipelineSourceTrigger
          - PipelineImageTrigger
      - Label:
          default: "Source Repository Information"
        Parameters:
          - Branch
      - Label:
          default: "Container Repository Information"
        Parameters:
          - TargetTag
      - Label:
          default: "Build Parameters"
        Parameters:
          - BuildSource
          - CodeStarConnectionArn
          - BuildStrategy
          - BuilderImage
          - ContextRoot
          - Containerfile
      - Label:
          default: "FROM Replacement"
        Parameters:
          - ContainerFromRepo
          - ContainerFromTag
    ParameterLabels:
      BuildSource:
        default: "Build Source"
      BuildStrategy:
        default: "Build Strategy"
      BuilderImage:
        default: "Builder Image (S2I only)"
      BuildStackName:
        default: "Build Stack Name"
      CodeStarConnectionArn:
        default: "CodeStar Connection ARN"
      RepositoryStackName:
        default: "Repository Stack Name"
      PipelineFrequency:
        default: "Pipeline Frequency"
      PipelineSourceTrigger:
        default: "Pipeline Source Trigger"
      PipelineImageTrigger:
        default: "Pipeline ECR Image Trigger"
      TargetTag:
        default: "Target Tag"
      ContainerFromRepo:
        default: "ECR Base Image Repository"
      ContainerFromTag:
        default: "ECR Base Image Tag"

Conditions:
  HasRate: !Not [!Equals ["none", !Ref PipelineFrequency]]
  IsCodeCommit: !Equals ["CodeCommit", !Ref BuildSource]
  EnableSourceTrigger: !Equals ["true", !Ref PipelineSourceTrigger]
  EnableEventRuleSourceTrigger: !And [!Condition IsCodeCommit, !Condition EnableSourceTrigger]
  EnableImageTrigger: !Equals ["true", !Ref PipelineImageTrigger]
  HasContainerFromRepo: !Not [!Equals ["", !Ref ContainerFromRepo]]
  HasContainerFromTag: !Not [!Equals ["", !Ref ContainerFromTag]]
  NeedImageTrigger: !And [!Condition HasContainerFromRepo, !Condition EnableImageTrigger]
  S2I: !Equals [ "Source-to-Image", !Ref BuildStrategy ]

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !ImportValue
          'Fn::Sub': '${BuildStackName}-PipelineBucket'
        Type: S3
      Name: !Ref "AWS::StackName"
      PipelineType: V2
      RoleArn: !ImportValue
        'Fn::Sub': '${BuildStackName}-ContainerPipelineRoleArn'
      Stages:
        - !If
          - IsCodeCommit
          - Name: Source
            Actions:
              - Name: Source
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: 1
                Configuration:
                  BranchName: !Ref Branch
                  PollForSourceChanges: false
                  RepositoryName: !ImportValue
                    'Fn::Sub': '${RepositoryStackName}-SourceRepositoryName'
                Region: !Ref "AWS::Region"
                OutputArtifacts:
                  - Name: SourceArtifact
                Namespace: SourceVariables
          - Name: Source
            Actions:
              - Name: Source
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: 1
                Configuration:
                  ConnectionArn: !Ref CodeStarConnectionArn
                  BranchName: !Ref Branch
                  DetectChanges: !If [EnableSourceTrigger, true, false]
                  FullRepositoryId: !ImportValue
                    'Fn::Sub': '${RepositoryStackName}-SourceRepositoryName'
                OutputArtifacts:
                  - Name: SourceArtifact
                Namespace: SourceVariables
        - Name: Build-Containers
          Actions:
            - Name: Build-AMD
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !ImportValue
                  'Fn::Sub': '${BuildStackName}-Amd64Build'
                EnvironmentVariables: !Join ["", ["[",
                    "{\"name\":\"IMAGE_TAG\",\"value\":\"", !Ref TargetTag, "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"IMAGE_REPO_NAME\",\"value\":\"", Fn::ImportValue: !Sub "${RepositoryStackName}-ImageRepositoryName", "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"FROM\",\"value\":\"", !If [ HasContainerFromRepo,
                    !Join [ "", [ !Ref "AWS::AccountId", ".dkr.ecr.", !Ref "AWS::Region", ".amazonaws.com/", !Ref ContainerFromRepo,
                                  !If [ HasContainerFromTag, !Join [ "", [ ":", !Ref ContainerFromTag ] ], "" ] ] ], "" ], "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"CONTAINERFILE\",\"value\":\"", !Ref Containerfile, "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"CONTEXT_ROOT\",\"value\":\"", !Ref ContextRoot, "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"S2I\",\"value\":\"", !If [S2I, "true", ""], "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"BUILDER_IMAGE\",\"value\":\"", !If [S2I, !Ref BuilderImage, ""], "\",\"type\":\"PLAINTEXT\"}",
                    "]"
                ]]
              Region: !Ref "AWS::Region"
              InputArtifacts:
                - Name: SourceArtifact
            - Name: Build-ARM
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !ImportValue
                  'Fn::Sub': '${BuildStackName}-Aarch64Build'
                EnvironmentVariables: !Join ["", ["[",
                    "{\"name\":\"IMAGE_TAG\",\"value\":\"", !Ref TargetTag, "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"IMAGE_REPO_NAME\",\"value\":\"", Fn::ImportValue: !Sub "${RepositoryStackName}-ImageRepositoryName", "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"FROM\",\"value\":\"", !If [ HasContainerFromRepo,
                    !Join [ "", [ !Ref "AWS::AccountId", ".dkr.ecr.", !Ref "AWS::Region", ".amazonaws.com/", !Ref ContainerFromRepo,
                                  !If [ HasContainerFromTag, !Join [ "", [ ":", !Ref ContainerFromTag ] ], "" ] ] ], "" ], "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"CONTAINERFILE\",\"value\":\"", !Ref Containerfile, "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"CONTEXT_ROOT\",\"value\":\"", !Ref ContextRoot, "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"S2I\",\"value\":\"", !If [S2I, "true", ""], "\",\"type\":\"PLAINTEXT\"},",
                    "{\"name\":\"BUILDER_IMAGE\",\"value\":\"", !If [S2I, !Ref BuilderImage, ""], "\",\"type\":\"PLAINTEXT\"}",
                    "]"
                ]]
              Region: !Ref "AWS::Region"
              InputArtifacts:
                - Name: SourceArtifact
        - Name: Build-Manifests
          Actions:
            - Name: Build-Manifests
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !ImportValue
                  'Fn::Sub': '${BuildStackName}-ManifestBuild'
                EnvironmentVariables: !Join ["", ["[",
                                                  "{\"name\":\"IMAGE_TAG\",\"value\":\"", !Ref TargetTag, "\",\"type\":\"PLAINTEXT\"},",
                                                  "{\"name\":\"IMAGE_REPO_NAME\",\"value\":\"", Fn::ImportValue: !Sub "${RepositoryStackName}-ImageRepositoryName", "\",\"type\":\"PLAINTEXT\"}",
                                                  "]"
                ]]
              Region: !Ref "AWS::Region"
              InputArtifacts:
                - Name: SourceArtifact

  PipelineSourceRule:
    Type: AWS::Events::Rule
    Condition: EnableEventRuleSourceTrigger
    Properties:
      Description: "Trigger container pipeline on source changes"
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Join [":", ["arn:aws:codecommit", !Ref "AWS::Region", !Ref "AWS::AccountId", Fn::ImportValue: !Sub "${RepositoryStackName}-SourceRepositoryName" ]]
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !Ref Branch
      Targets:
        - Arn: !Join [":", ["arn:aws:codepipeline", !Ref "AWS::Region", !Ref "AWS::AccountId", !Ref Pipeline]]
          RoleArn: !ImportValue
            'Fn::Sub': '${BuildStackName}-PipelineTriggerRoleArn'
          Id: !Join ["-", ["codepipeline", !Ref "AWS::StackName"]]

  PipelineTimedRule:
    Type: AWS::Events::Rule
    Condition: HasRate
    Properties:
      Description: !Join [" ", ["Run every", !Ref PipelineFrequency]]
      ScheduleExpression: !Join ["", ["rate(", !Ref PipelineFrequency, ")"]]
      Targets:
        - Arn: !Join [":", ["arn:aws:codepipeline", !Ref "AWS::Region", !Ref "AWS::AccountId", !Ref Pipeline]]
          RoleArn: !ImportValue
            'Fn::Sub': '${BuildStackName}-PipelineTriggerRoleArn'
          Id: !Join ["-", ["codepipeline", !Ref "AWS::StackName"]]

  PipelineImageRule:
    Type: AWS::Events::Rule
    Condition: NeedImageTrigger
    Properties:
      Description: "Trigger container pipeline on image changes"
      EventPattern:
        source:
          - aws.ecr
        detail-type:
          - ECR Image Action
        detail:
          action-type:
            - PUSH
          result:
            - SUCCESS
          repository-name:
            - !Ref ContainerFromRepo
          image-tag:
            - !If [HasContainerFromTag, !Ref ContainerFromTag, "latest"]
      Targets:
        - Arn: !Join [ ":", [ "arn:aws:codepipeline", !Ref "AWS::Region", !Ref "AWS::AccountId", !Ref Pipeline ] ]
          RoleArn: !ImportValue
            'Fn::Sub': '${BuildStackName}-PipelineTriggerRoleArn'
          Id: !Join ["-", ["codepipeline", !Ref "AWS::StackName"]]